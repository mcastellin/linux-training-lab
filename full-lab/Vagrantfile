# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"

  config.vm.box = "centos/7"
  config.hostmanager.enabled = true
  config.hostmanager.manage_guest = true
  config.hostmanager.include_offline = true
  config.hostmanager.ignore_private_ip = false

  # Workaround to avoid virtualbox captures microphone all the time
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--audio", "none"]

    # By default servers will have 512MB of memory.
    # If required by the hosted services the larger memory amount will be specified on every instance
    vb.memory = "512"
  end

  # Run the standard installation script. This is going to be the same for all servers
  config.vm.provision "shell", path: "scripts/install.sh", privileged: true

  config.vm.define "ns1" do |ns1|
    ns1.vm.hostname = "ns1"
    ns1.vm.network "private_network", ip: "10.0.1.40"

    ns1.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    ns1.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.define "ns2" do |ns2|
    ns2.vm.hostname = "ns2"
    ns2.vm.network "private_network", ip: "10.0.1.41"

    ns2.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    ns2.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.define "proxy1" do |proxy1|
    proxy1.vm.hostname = "proxy1"
    proxy1.vm.network "private_network", ip: "10.0.1.60"

    proxy1.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    proxy1.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.define "mail1" do |mail1|
    mail1.vm.hostname = "mail1"
    mail1.vm.network "private_network", ip: "10.0.1.50"

    mail1.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    mail1.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  config.vm.define "apache1" do |apache1|
    apache1.vm.hostname = "apache1"
    apache1.vm.network "private_network", ip: "10.0.1.30"

    apache1.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    apache1.vm.provision "shell", inline: <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
      yum install -q -y httpd
      systemctl enable httpd --now 2>&1
      echo "This content is from the apache1 server! Congratulations!" > /var/www/html/index.html

      firewall-cmd --list-services | grep http
      if [ $? -ne 0 ]; then
        echo "Opening port 80 on firewalld"
        firewall-cmd --permanent --add-service http
        firewall-cmd --reload 
      fi
    SHELL
  end

  # Server machine to host samba share
  config.vm.define "samba1" do |samba1|
    samba1.vm.hostname = "samba1"
    samba1.vm.network "private_network", ip: "10.0.1.20"

    samba1.vm.provision "shell", path: "scripts/install.sh", privileged: true
    samba1.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    samba1.vm.provision "shell", "inline": <<-SHELL
      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
  end

  # Defines primary server to ssh into by default.
  # When using the lab this is the main server to connect to perform administrative tasks
  config.vm.define "client1", primary: true do |client1|
    client1.vm.hostname = "client1"
    client1.vm.network "private_network", ip: "10.0.1.11"

    client1.vm.provision "shell", path: "scripts/install.sh", privileged: true
    client1.vm.provision "file", source: "~/.ssh/vagrant_rsa", destination: "~/.ssh/id_rsa"

    client1.vm.provider "virtualbox" do |vb|
      unless File.exist?(".vagrant/client1_disk2.vdi")
        vb.customize ["storagectl", :id, "--name", "SCSI", "--add", "scsi"]
      end
      unless File.exist?(".vagrant/client1_disk2.vdi")
        vb.customize ["createhd", "--filename", ".vagrant/client1_disk2.vdi", "--variant", "Fixed", "--size", 5 * 1024]
      end
      unless File.exist?(".vagrant/client1_disk3.vdi")
        vb.customize ["createhd", "--filename", ".vagrant/client1_disk3.vdi", "--variant", "Fixed", "--size", 10 * 1024]
      end

      vb.customize ["storageattach", :id,
                    "--storagectl", "SCSI",
                    "--port", 1,
                    "--device", 0,
                    "--type", "hdd",
                    "--medium", ".vagrant/client1_disk2.vdi"]

      vb.customize ["storageattach", :id,
                    "--storagectl", "SCSI",
                    "--port", 2,
                    "--device", 0,
                    "--type", "hdd",
                    "--medium", ".vagrant/client1_disk3.vdi"]
    end
  end
end
